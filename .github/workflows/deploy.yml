# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: deploy to production

on:
  push:
    branches: [ "main" ]
    
permissions:
  id-token: write       # <-- needed for OIDC to work
  contents: read        # <-- needed to checkout the code

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.31.0'
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::582081400281:role/GitHubActionsECRDeployRole
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push -a $REGISTRY/$REPOSITORY
      
      - name: Update kube config
        run: aws eks update-kubeconfig --name simple-bank --region ap-southeast-2

      - name: Deploy image to amazon EKS
        run: |
          kubectl apply -f eks/aws-auth.yml
          kubectl apply -f eks/deployment.yml
          kubectl apply -f eks/service.yml
